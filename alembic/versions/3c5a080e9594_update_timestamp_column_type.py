"""Update timestamp column type

Revision ID: 3c5a080e9594
Revises: 
Create Date: 2023-05-08 23:16:15.764093

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3c5a080e9594'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('variation')
    op.drop_table('product_variation')
    op.drop_table('users')
    op.drop_table('orders')
    op.drop_table('category')
    op.drop_table('admins')
    op.drop_table('orderitems')
    op.drop_table('transactions')
    op.drop_table('btc_transactions')
    op.drop_table('products')
    op.drop_table('subcategory')
    op.alter_column('btc_transaction', 'timestamp', type_=sa.DateTime)
    # ### end Alembic commands ###


def downgrade() -> None:
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subcategory',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('subcategory_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name='subcategory_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='subcategory_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('products_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('image', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sub_category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name='products_category_id_fkey'),
    sa.ForeignKeyConstraint(['sub_category_id'], ['subcategory.id'], name='products_sub_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='products_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('btc_transactions',
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('price', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('value', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('currency', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('txid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='btc_transactions_user_id_fkey'),
    sa.PrimaryKeyConstraint('transaction_id', name='btc_transactions_pkey')
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('refunded', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('provider', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('telegram_charge_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('provider_charge_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], name='transactions_order_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='transactions_user_id_fkey'),
    sa.PrimaryKeyConstraint('transaction_id', name='transactions_pkey'),
    sa.UniqueConstraint('provider', 'provider_charge_id', name='transactions_provider_provider_charge_id_key')
    )
    op.create_table('orderitems',
    sa.Column('item_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.order_id'], name='orderitems_order_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='orderitems_product_id_fkey'),
    sa.PrimaryKeyConstraint('item_id', name='orderitems_pkey')
    )
    op.create_table('admins',
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('edit_products', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('receive_orders', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('create_transactions', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('display_on_help', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_owner', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('live_mode', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='admins_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='admins_pkey')
    )
    op.create_table('category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('category_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='category_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('orders',
    sa.Column('order_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('creation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('delivery_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('refund_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('refund_reason', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name='orders_user_id_fkey'),
    sa.PrimaryKeyConstraint('order_id', name='orders_pkey')
    )
    op.create_table('users',
    sa.Column('user_id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('credit', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('user_id', name='users_pkey')
    )
    op.create_table('product_variation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('variation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name='product_variation_product_id_fkey'),
    sa.ForeignKeyConstraint(['variation_id'], ['variation.id'], name='product_variation_variation_id_fkey'),
    sa.PrimaryKeyConstraint('id', 'product_id', 'variation_id', name='product_variation_pkey'),
    sa.UniqueConstraint('product_id', 'variation_id', name='product_variation_product_id_variation_id_key')
    )
    op.create_table('variation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_diff', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='variation_pkey')
    )
    # ### end Alembic commands ###
